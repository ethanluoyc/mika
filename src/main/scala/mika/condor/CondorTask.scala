package mika.condor

import java.io.File

import mika.dag.AbstractTask
import collection.JavaConverters._


abstract class CondorTask[V](var universe: UniverseType,
                             name: String,
                             var args: Array[String],
                             var deps: List[CondorTask[_]],
                             val params: Map[String, AnyRef])
  extends AbstractTask[CondorTask[_], V](name, deps.asJava) {

  // TODO use annotation for better rendering of the options in script

  protected var executable: String
  protected var requirements =
    "JavaVersion>=\"1.8\" && regexp(\"^(matrix|graphic|)[0-9][0-9]\", TARGET.Machine)"
  protected var initialdir: String = "./"
  protected var numOfCPUs: Int = 1
  protected var requestMemory: String

  // TODO, how to pass dependencies in the condorscript?
  protected def condorHeader: String =
    s"""|#Generated by Mika, DON NOT MODIFY!
        |
        |UNIVERSE = $universe
        |
        |EXECUTABLE = $executable
        |requirements = $requirements
        |request_memory = $requestMemory
        |initialdir = $initialdir
        |
        |OUTPUT = $name.out
        |ERROR  = $name.err
        |LOG    = $name.log""".stripMargin

  protected def arguments: String = args.mkString(" ")

  def submitFile(): File = new File(name + ".sub")

}

